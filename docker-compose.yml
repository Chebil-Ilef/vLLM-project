services:
  neo4j:
    image: neo4j:5.11
    container_name: bia_neo4j
    environment:
      - NEO4J_AUTH=neo4j/testpassword
    volumes:
      - neo4j_data:/data
    ports: ["7474:7474", "7687:7687"]
    healthcheck:
      test: ["CMD", "cypher-shell", "-u", "neo4j", "-p", "testpassword", "MATCH () RETURN count(*) as count"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  vllm:
    build:
      context: .
      dockerfile: ./chatbot-system/Dockerfile.vllm
    container_name: vllm
    restart: unless-stopped
    environment:
      MODEL_NAME: "${VLLM_MODEL:-mistralai/Mistral-7B-v0.1}"
      VLLM_API_KEY: "${VLLM_API_KEY:-devkey}"   
    ports: ["8000:8000"]
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
    healthcheck:
      test: ["CMD", "curl", "-fsS", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  backend:
    build:
      context: ./chatbot-system
      args:
        USE_VLLM: ${USE_VLLM:-0}
    container_name: bia_backend
    env_file:
      - ./chatbot-system/.env
    environment:
      - FLASK_ENV=production
      - VLLM_URL=http://vllm:8000/v1
      - VLLM_API_KEY=${VLLM_API_KEY:-devkey}
      - VLLM_MODEL=${VLLM_MODEL:-mistralai/Mistral-7B-v0.1}
    ports: ["5000:5000"]
    depends_on:
      neo4j:
        condition: service_healthy
      vllm:
        condition: service_healthy
    volumes:
      - ./chatbot-system:/app
    healthcheck:
      test: ["CMD", "curl", "-fsS", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  frontend:
    build: ./frontend
    container_name: bia_frontend
    ports: ["8080:8080"]
    depends_on:
      - backend

volumes:
  neo4j_data:
